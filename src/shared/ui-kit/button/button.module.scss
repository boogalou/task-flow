@import 'src/shared/styles/index';

@mixin button-styles($color, $hover-color: null, $outline: false) {
  @if $outline == true {
    background-color: transparent;
    color: $color;
    border: 1px solid $color;
    @include respond-to('desktop') {
      &:hover {
        background-color: $color;
        color: white;
      }
    }
  } @else {
    background-color: $color;
    @include respond-to('desktop') {
      &:hover {
        background-color: if($hover-color != null, $hover-color, darken($color, 10%));
      }
    }
  }
}

@layer component {
  .button {
    padding: 10px 20px;
    border: none;
    border-radius: px-to-rem(6px);
    font-size: px-to-rem(16px);
    cursor: pointer;
    position: relative;
    overflow: hidden;
    color: var(--color-secondary-font);
    transition: background-color 0.3s ease;

    &--primary {
      @include button-styles(var(--color-primary), var(--color-primary-hover));
    }

    &--secondary {
      @include button-styles(var(--color-secondary), var(--color-secondary-hover));
    }

    &--success {
      @include button-styles(var(--color-success), var(--color-success-hover));
    }

    &--info {
      @include button-styles(var(--color-info), var(--color-info-hover));
    }

    &--danger {
      @include button-styles(var(--color-danger), var(--color-danger-hover));
    }

    &--warning {
      @include button-styles(var(--color-warning), var(--color-warning-hover));
    }

    &--outline {
      @include button-styles(var(--color-primary), null, true);
    }
  }
}
